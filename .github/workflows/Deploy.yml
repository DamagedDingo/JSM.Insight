name: "Workflow: Publish to GitHub and PowerShell Gallery"

on: 
  push:
    branches:
      - master

jobs:
  job-1:
    name: Publish to GitHub and PowerShell Gallery
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '!Deploy!')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.1

      - name: Set environment variables
        run: |
          $Username, $ProjectName = $env:GITHUB_REPOSITORY -split "/"
          @( 
            "GH_USERNAME={0}" -f $Username
            "GH_PROJECTNAME={0}" -f $ProjectName
          ) | Add-Content -Path $env:GITHUB_ENV
        shell: pwsh

      - name: Install dependent modules
        run: |
          $Modules = @(
            "ChangelogManagement"
            "InvokeBuild"
          )
          Install-Module -Name $Modules -Scope "CurrentUser" -Force -ErrorAction "Stop"
        shell: pwsh

      - name: Build
        run: |
          $Modules = @(
            "ChangelogManagement"
            "InvokeBuild"
          )
          Import-Module -Name $Modules -ErrorAction "Stop"

          Invoke-Build -ModuleName $env:GH_PROJECTNAME -Author $env:GH_USERNAME -NewRelease
        shell: pwsh

      - name: Publish to PowerShell Gallery
        run: Publish-Module -Path .\build\$env:GH_PROJECTNAME\ -NuGetApiKey $env:KEY -ErrorAction "Stop" -Force
        shell: pwsh
        env:
          KEY: ${{ secrets.PSGALLERY_API_KEY }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VersionToBuild }}
          release_name: Release ${{ env.VersionToBuild }}
          body_path: release/releasenotes.txt
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url:  ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/${{ env.GH_PROJECTNAME }}_${{ env.VersionToBuild }}.zip
          asset_name: ${{ env.GH_PROJECTNAME }}_${{ env.VersionToBuild }}.zip
          asset_content_type: application/zip

      - name: Upload release as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.SHA }}
          path: release/${{ env.GH_PROJECTNAME }}_${{ env.VersionToBuild }}.zip

      - name: Copy CHANGELOG.md and module manifest to repository root directory
        run: |
          Copy-Item -Path (".\build\{0}\CHANGELOG.md" -f $env:GH_PROJECTNAME) -Destination . -Force
          Copy-Item -Path (".\build\{0}\{0}.psd1" -f $env:GH_PROJECTNAME) -Destination .\$env:GH_PROJECTNAME -Force
        shell: pwsh

      - name: Commit CHANGELOG.md and module manifest
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add CHANGELOG.md ${GH_PROJECTNAME}/${GH_PROJECTNAME}.psd1
          git commit -m "Released ${VersionToBuild}: updated change log and manifest"
      
      - name: Push commit
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
